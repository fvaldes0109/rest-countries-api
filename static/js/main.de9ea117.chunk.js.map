{"version":3,"sources":["Helpers/Parsers.js","Components/Card.jsx","Components/Search.jsx","Components/Selection.jsx","Components/CardsArea.jsx","Providers/CountryProvider.js","Components/Detail.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","parsePopulation","num","str","toString","result","counter","i","length","Card","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","flag","name","region","capital","population","_createClass","key","value","_jsx","Link","to","this","style","color","textDecoration","children","_jsxs","className","src","alt","React","Component","Search","apply","arguments","width","type","placeholder","onChange","e","updateSearchQuery","target","Selection","updateRegion","disabled","selected","hidden","CardsArea","nameQuery","displayedCountries","countries","setState","prevProps","prevState","_this2","filter","country","toLowerCase","includes","trim","_Fragment","bind","map","index","getAllCountries","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","getCountry","_ref2","_callee2","fullName","_context2","concat","_x","getCountriesNames","_ref3","_callee3","codes","_context3","undefined","_x2","Detail","window","location","pathname","slice","countryData","borderNames","then","borders","names","_this3","_this4","content","Object","keys","flags","svg","common","values","nativeName","subregion","tld","currencies","languages","onClick","setCountry","App","BrowserRouter","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de9ea117.chunk.js","sourcesContent":["const parsePopulation = (num) => {\n    \n    let str = num.toString();\n    let result = '';\n    let counter = 0;\n    \n    for(let i = str.length - 1; i >= 0; i--) {\n        result = str[i] + result;\n        counter++;\n        if(counter === 3 && i !== 0) {\n            result = ',' + result;\n            counter = 0;\n        }\n    }\n    \n    return result;\n}\n\nmodule.exports = {\n    parsePopulation,\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { parsePopulation } from '../Helpers/Parsers';\n\nexport default class Card extends React.Component {\n\n  constructor(props) {\n    super(props);\n   \n    this.state = {\n      flag: props.flag,\n      name: props.name,\n      region: props.region,\n      capital: props.capital,\n      population: props.population\n    };\n  }\n\n  render() {\n    return(\n      <Link to={'/' + this.state.name} style={{ color: 'inherit', textDecoration: 'inherit'}}>\n        <div className=\"country-card\">\n          <img src={this.state.flag} alt={this.state.name} />\n          <div className=\"country-card-info\">\n            <h2>{this.state.name}</h2>\n            <p><strong>Population:</strong> {parsePopulation(this.state.population)}</p>\n            <p><strong>Region:</strong> {this.state.region}</p>\n            <p><strong>Capital:</strong> {this.state.capital}</p>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}","import React from \"react\";\n\nexport default class Search extends React.Component {\n\n  render() {\n    return (\n      <div className=\"search\">\n        <img src=\"https://img.icons8.com/ios/50/000000/search--v1.png\" alt=\"search icon\" width=\"20\"/>\n        <input type=\"text\" placeholder=\"Search for a country...\" onChange={(e) => this.props.updateSearchQuery(e.target.value)} />\n      </div>\n    );\n  }\n}","import React from \"react\";\n\nexport default class Selection extends React.Component {\n\n  render() {\n    return (\n      <select onChange={(e) => this.props.updateRegion(e.target.value)}>\n        <option value=\"\" disabled selected hidden>Filter by Region</option>\n        <option value=\"\">Any</option>\n        <option value=\"Africa\">Africa</option>\n        <option value=\"Americas\">America</option>\n        <option value=\"Asia\">Asia</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Oceania\">Oceania</option>\n      </select>\n    );\n  }\n}","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport Card from './Card';\nimport Search from './Search';\nimport Selection from './Selection';\n\nexport default class CardsArea extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n    this.state = {\n      nameQuery: '',\n      region: '',\n      displayedCountries: [],\n    }\n\t}\n  \n  componentDidMount() {\n    if (this.props.countries.length > 0) {\n      this.setState({ displayedCountries: this.props.countries });\n    } \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.countries !== this.props.countries) {\n      this.setState({ displayedCountries: this.props.countries });\n    }\n  }\n\n  updateSearchQuery(nameQuery) {\n    this.setState({ nameQuery, displayedCountries:\n      this.props.countries.filter((country) => nameQuery === '' || country.name.toLowerCase().includes(nameQuery.toLowerCase().trim()))\n                          .filter((country) => this.state.region === '' || this.state.region === country.region)\n    });\n  }\n\n  updateRegion(region) {\n    this.setState({ region, displayedCountries:\n      this.props.countries.filter((country) => region === '' || region === country.region)\n    });\n  }\n\n\trender() {\n\t\treturn(\n      <>\n        <nav>\n          <Search updateSearchQuery={this.updateSearchQuery.bind(this)} />\n          <Selection updateRegion={this.updateRegion.bind(this)}/>\n        </nav>\n        <main className=\"cards-area\">\n          {this.state.displayedCountries.map(country => {\n            return(\n              <div key={country.index}>\n                <Card\n                  key={country.index}\n                  flag={country.flag}\n                  name={country.name}\n                  region={country.region}\n                  capital={country.capital}\n                  population={country.population}\n                />\n              </div>\n            );\n          })}\n        </main>\n      </>\n\t\t);\n\t}\n}","export const getAllCountries = async () => {\n\n    const response = await fetch('https://restcountries.com/v2/all?fields=name,capital,region,population,flag');\n    const data = await response.json();\n\n    return data.map(((country, index) => {\n        country.index = index;\n        return country;\n    }));\n}\n\nexport const getCountry = async (fullName) => {\n\n    const response = await fetch(`https://restcountries.com/v3.1/name/${fullName}?fullText=true`);\n    const data = await response.json();\n\n    return data;\n}\n\nexport const getCountriesNames = async (codes) => {\n\n    if (codes === undefined) return [];\n    const response = await fetch(`https://restcountries.com/v3.1/alpha?codes=${codes.toString()}&fields=name`);\n    const data = await response.json();\n\n    return data;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { getCountry, getCountriesNames } from '../Providers/CountryProvider.js';\nimport { parsePopulation } from '../Helpers/Parsers.js';\n\nexport default class Detail extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      country: window.location.pathname.slice(1),\n      countryData: {},\n      borderNames: [],\n    }\n  }\n  \n  componentDidMount() {\n\n    getCountry(this.state.country).then((data) => {\n      this.setState({ countryData: data[0] });\n\n      getCountriesNames(data[0].borders).then((names) => {\n        this.setState({ borderNames: names });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.country !== this.state.country) {\n      getCountry(this.state.country).then((data) => {\n        this.setState({ countryData: data[0] });\n\n        getCountriesNames(data[0].borders).then((names) => {\n          this.setState({ borderNames: names });\n        });\n      });\n    }\n  }\n\n  setCountry(country) {\n    this.setState({ country });\n  }\n\n  render() {\n    \n    const data = this.state.countryData;\n    const content = Object.keys(this.state.countryData).length === 0 ? '' : (\n        <div className='info-page'>\n          <div className='flag'>\n            <img src={data.flags.svg} alt={`Flag of ${data.name.common}`} />\n          </div>\n          <div className='info'>\n            <h1>{data.name.common}</h1>\n            <div className='info-details'>\n              <div className='col'>\n                <p><strong>Native Name:</strong> {Object.values(data.name.nativeName).map(e => ' ' + e.common).toString()}</p>\n                <p><strong>Population:</strong> {parsePopulation(data.population)}</p>\n                <p><strong>Region:</strong> {data.region}</p>\n                <p><strong>Sub Region:</strong> {data.subregion}</p>\n                <p><strong>Capital:</strong> {data.capital}</p>\n              </div>\n              <div className='col'>\n                <p><strong>Top Level Domain:</strong> {data.tld}</p>\n                <p><strong>Currencies:</strong> {Object.values(data.currencies).map(e => ' ' + e.name).toString()}</p>\n                <p><strong>Languages:</strong> {Object.values(data.languages).map(e => ' ' + e).toString()}</p>\n              </div>\n            </div>\n            <div className='border-info'>\n              {this.state.borderNames.length === 0 ? '' : (\n                <>\n                  <span><strong>Border Countries:</strong></span>\n                  {this.state.borderNames.length === 0 ? '' :\n                    this.state.borderNames.map((country, index) => \n                      <Link to={`/${country.name.common}`} key={index} style={{ color: 'inherit', textDecoration: 'inherit'}}>\n                        <button onClick={() => this.setCountry(country.name.common)}>{country.name.common}</button>\n                      </Link>\n                    )\n                  }\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n\n    return(\n      <div className='detail-page'>\n        <nav>\n          <Link to='/' style={{ color: 'inherit', textDecoration: 'inherit'}}>\n            <button className='back-button'>\n              <img src=\"https://img.icons8.com/ios/50/000000/back.png\" alt=\"back icon\" width=\"20\"/>\n              Back\n            </button>\n          </Link>\n        </nav>\n\n        <main>\n          {content}\n        </main>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport './App.css';\nimport './Mobile.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport CardsArea from './Components/CardsArea.jsx';\nimport Detail from './Components/Detail';\nimport { getAllCountries } from './Providers/CountryProvider.js';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      countries: [],\n    }\n  }\n  \n  componentDidMount() {\n    getAllCountries().then((data) => {\n      this.setState({ countries: data });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Where in the world?</h1>\n          {/* <div className=\"mode-toggle\">\n            <img src=\"https://img.icons8.com/ios/50/000000/moon-symbol.png\" alt=\"moon icon\" width=\"20\"/>\n            <p>Dark Mode</p>\n          </div> */}\n        </header>\n    \n        <BrowserRouter>\n          <Routes>\n            <Route exact path=\"/\" element={<CardsArea countries={this.state.countries}/>} />\n            <Route path=\"/:country\" element={<Detail />} />\n          </Routes>\n        </BrowserRouter>\n    \n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}